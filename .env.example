# Strapi dependencies
STRAPI_HOST=0.0.0.0
STRAPI_PORT=1337
APP_KEYS="toBeModified1,toBeModified2"
API_TOKEN_SALT=tobemodified
# ADMIN_JWT_SECRET and JWT_SECRET has to be different
ADMIN_JWT_SECRET=tobemodified
JWT_SECRET=tobemodified2
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_NAME=strapi
DATABASE_USERNAME=strapi
DATABASE_PASSWORD=strapi
DATABASE_SCHEMA=public
DATABASE_SSL_SELF=false

## AWS LocalStack development endpoint
LOCALSTACK_ENDPOINT=http://127.0.0.1:4566

## AWS SES Settings

## These settings correspond to LocalStack system defaults
## https://docs.localstack.cloud/references/configuration/
AWS_SES_ACCESS_KEY_ID="test"
AWS_SES_SECRET_ACCESS_KEY="test"
AWS_SES_REGION=us-east-1

# `MAIL_FROM` and `MAIL_REPLY_TO` variables will not take effect for emails sent by `user-permissions` Strapi plugin 
# (f.e. reset password emails) as they are configured separately via Strapi UI in `Settings > Email Templates`.
MAIL_FROM="no-reply@example.com"
MAIL_REPLY_TO="contact@example.com"

## AWS S3 settings

AWS_S3_BUCKET=static.example.com

## These settings correspond to LocalStack system defaults
## https://docs.localstack.cloud/references/configuration/
AWS_S3_ACCESS_KEY_ID="test"
AWS_S3_ACCESS_SECRET="test"
AWS_S3_REGION=us-east-1

## The base URL is used to access static content uploaded via Strapi's UI to AWS S3:
## - on production it uses a dedicated subdomain which is linked to an eponymous AWS S3 bucket via a CNAME DNS record
## - in development it points directly to LocalStack host and is appended by the S3 bucket name in Strapi's `plugin.ts`
STATIC_CONTENT_BASE_URL=http://localhost:4566
STATIC_MEDIA_CONTENT_PATH=public/media

# Point to a folder (relative to /backend/vaa-strapi) if you want to load data on initialise. This will only take place if the database contains no Election
LOAD_DATA_ON_INITIALISE_FOLDER=""

# Set to true to enable mock data on an empty database
GENERATE_MOCK_DATA_ON_INITIALISE=true

# Used only in development builds
GENERATE_MOCK_DATA_ON_RESTART=false

# Generate LLM mock data during mock data generation.
# Only applicable in development builds and if either of the GENERATE_MOCK_DATA variables is true.
LLM_GENERATE_MOCK_DATA_ON_INITIALISE=true

LLM_OPENAI_API_KEY=""

# Frontend dependencies
# Used to reach backend instance from a browser
PUBLIC_BROWSER_BACKEND_URL=http://localhost:1337
# Used to reach frontend instance from a server (differs from `PUBLIC_BROWSER_FRONTEND_URL` when using Docker)
PUBLIC_SERVER_BACKEND_URL=http://strapi:1337

# Used to reach frontend instance from a browser
PUBLIC_BROWSER_FRONTEND_URL=http://localhost:5173
# Used to reach frontend instance from a server (differs from `PUBLIC_BROWSER_FRONTEND_URL` when using Docker)
PUBLIC_SERVER_FRONTEND_URL=http://frontend:5173

FRONTEND_PORT=5173

# IdP (Signicat)

# Source: https://openvaa.sandbox.signicat.com/auth/open/.well-known/openid-configuration
# The URL where users are redirected to authenticate with the OpenID Connect provider before obtaining an authorization code. 
PUBLIC_IDENTITY_PROVIDER_AUTHORIZATION_ENDPOINT=https://openvaa.sandbox.signicat.com/auth/open/connect/authorize
# The URL used to exchange an authorization code for access, ID, and refresh tokens.
IDENTITY_PROVIDER_TOKEN_ENDPOINT=https://openvaa.sandbox.signicat.com/auth/open/connect/token
# The endpoint that provides a JSON Web Key Set (JWKS) used to verify the authenticity of signed tokens from the identity provider.
IDENTITY_PROVIDER_JWKS_URI=https://openvaa.sandbox.signicat.com/auth/open/.well-known/openid-configuration/jwks

# Source: https://dashboard.signicat.com/oidc-clients/clientdetails/{client_id}
PUBLIC_IDENTITY_PROVIDER_CLIENT_ID=client_id

# Source: https://dashboard.signicat.com/oidc-clients/clientdetails/{client_id}/secrets
IDENTITY_PROVIDER_CLIENT_SECRET=client_secret

# Source: https://dashboard.signicat.com/oidc-clients/new-public-key/{client_id}.
# Select "Encryption", keep the private part of the key pair.
IDENTITY_PROVIDER_ENCRYPTION_PRIVATE_KEY='{"kty":"RSA","kid":"{key_id}","use":"enc","alg":"RSA-OAEP","e":"{secret}","n":"{secret}","d":"{secret}","p":"{secret}","q":"{secret}","dp":"{secret}","dq":"{secret}","qi":"{secret}"}'

# Source: {PUBLIC_BROWSER_BACKEND_URL}/admin/settings/api-tokens
# Minimal permissions: Users-Permissions > Candidate > Preregister
BACKEND_API_TOKEN=api_token

# If 'true', frontend debug messages will be logged even in production
PUBLIC_DEBUG=false