# Backend dependencies
STRAPI_HOST=0.0.0.0
STRAPI_PORT=1337
APP_KEYS="toBeModified1,toBeModified2"
API_TOKEN_SALT=tobemodified
# ADMIN_JWT_SECRET and JWT_SECRET has to be different
ADMIN_JWT_SECRET=tobemodified
JWT_SECRET=tobemodified2
DATABASE_HOST=postgres
DATABASE_PORT=5432
DATABASE_NAME=strapi
DATABASE_USERNAME=strapi
DATABASE_PASSWORD=strapi
DATABASE_SCHEMA=public
DATABASE_SSL_SELF=false
PUBLIC_FRONTEND_URL="http://localhost:5173" # Used for emails linking to the frontend

# AWS SES Settings
AWS_ACCESS_KEY_ID="EXAMPLE_KEY"
AWS_SECRET_ACCESS_KEY="EXAMPLE_SECRET"
AWS_REGION="eu-north-1"
# `MAIL_FROM` and `MAIL_REPLY_TO` variables will not take effect for emails sent by `user-permissions` Strapi plugin 
# (f.e. reset password emails) as they are configured separately via Strapi UI in `Settings > Email Templates`.
MAIL_FROM="OpenVAA Voting Advice Application <no-reply@openvaa.org>"
MAIL_REPLY_TO="OpenVAA Admin <contact@openvaa.org>"

# Maildev settings (used only in dev)
MAILDEV_PORT=1080

## AWS S3 settings for static content storage
AWS_S3_ACCESS_KEY_ID="EXAMPLE_KEY"
AWS_S3_ACCESS_SECRET="EXAMPLE_SECRET"
AWS_S3_REGION=eu-north-1
AWS_S3_BUCKET=static-example-com

## Will be used as the base URL for media content uploaded via Strapi's UI.
## Requires an existing CNAME DNS record for the corresponding subdomain which points to AWS S3 bucket where the content is stored.
STATIC_CONTENT_BASE_URL=https://static.example.com
STATIC_MEDIA_CONTENT_PATH=public/media

# Point to a folder (relative to /backend/vaa-strapi) if you want to load data on initialise. This will only take place if the database contains no Election
LOAD_DATA_ON_INITIALISE_FOLDER=""

# Set to true to enable mock data on an empty database
GENERATE_MOCK_DATA_ON_INITIALISE=true

# Used only in development builds
GENERATE_MOCK_DATA_ON_RESTART=false

# Frontend dependencies
VITE_BACKEND_URL=http://strapi:1337
PUBLIC_BACKEND_URL=http://localhost:1337
FRONTEND_PORT=5173