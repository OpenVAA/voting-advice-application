name: "Main tests & validation"

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**/*/.env.example'
      - '.env.example'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**/*/.env.example'
      - '.env.example'

jobs:

  frontend-and-shared-module-validation:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Frontend source code"
        uses: actions/checkout@v4

      - name: Setup Yarn 4.6
        uses: threeal/setup-yarn-action@v2
        with:
          version: 4.6

      - name: Setup Node.js 20.18.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: "yarn"
  
      - name: "Install all dependencies"
        run: yarn install --frozen-lockfile
  
      - name: "Build all shared modules"
        run: yarn build:shared

      - name: "Run Prettier check globally"
        run: yarn format:check

      - name: "Run ESlint check on frontend"
        run: yarn lint:check

      - name: "Check that TranslationKey type is up to date"
        run: yarn workspace @openvaa/frontend generate:translation-key-type && git diff --exit-code

      - name: "Run Frontend and shared module tests"
        run: yarn test:unit

      - name: "Configure frontend environment using the repo root .env.example file"
        run: cp .env.example frontend/.env

      - name: "Build frontend"
        run: yarn workspace @openvaa/frontend build

  backend-validation:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout Backend source code"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Yarn 4.6
        uses: threeal/setup-yarn-action@v2
        with:
          version: 4.6

      - name: Setup Node.js 20.18.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: "yarn"

      - name: Cache node modules
        id: cache-npm-backend-main
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: "backend/vaa-strapi/node_modules"
          key: ${{ runner.os }}-backend-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: "Install all dependencies"
        run: yarn install --frozen-lockfile
            
      - name: "Build all shared modules"
        run: yarn build:shared

      - name: "Install Backend yarn dependencies"
        run: yarn workspace @openvaa/strapi install --frozen-lockfile

      # We've already linted and formatted the code globally in the previous job

      # These are currently not used
      # - name: "Run Backend tests"
      #   run: |
      #     npm run test

      - name: "Build backend"
        run: |
          yarn workspace @openvaa/strapi build

  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout source code"
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: "Configure environment"
        run: cp .env.example .env

      - name: Setup Yarn 4.6
        uses: threeal/setup-yarn-action@v2
        with:
          version: 4.6
  
      - name: Setup Node.js 20.18.1
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1
          cache: "yarn"

      # - name: Cache node modules
      #   id: cache-npm-e2e-main
      #   uses: actions/cache@v4
      #   env:
      #     cache-name: cache-node-modules-e2e
      #   with:
      #     path: "node_modules"
      #     key: ${{ runner.os }}-e2e-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      - name: "Install yarn dependencies"
        run: yarn install --frozen-lockfile

      - name: "Install playwright"
        run: yarn playwright install

      - name: "Start OpenVAA"
        run: yarn dev

      - name: "Collect Docker logs on failure"
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: ./logs

      - name: "Tar Docker logs"
        if: failure()
        run: tar cvzf ./logs.tgz ./logs

      - name: "Upload Docker logs on failure"
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs.tgz
          path: ./logs.tgz
          retention-days: 30

      - name: "Sleep for 30s to allow mock data generation to complete before running e2e tests"
        uses: juliangruber/sleep-action@v2
        with:
          time: 30s

      - name: "Run E2E tests"
        run: yarn test:e2e

      - name: "Upload playwright setup report"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-setup-report
          path: tests/playwright-setup-report/
          retention-days: 30

      - name: "Upload playwright report"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/playwright-report/
          retention-days: 30

      - name: "Stop OpenVAA"
        if: always()
        run: yarn dev:down
