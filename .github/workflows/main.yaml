name: Main tests & validation

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**/*/.env.example'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**/*/.env.example'

jobs:
  frontend-validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: 'frontend'

    steps:
      - name: "Checkout Frontend source code"
        uses: actions/checkout@v3

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'yarn'
          cache-dependency-path: ./frontend/yarn.lock

      - name: "Install Frontend dependencies"
        run: yarn install

      - name: "Run Prettier check on frontend"
        run: yarn prettier:check

      - name: "Run ESlint check on frontend"
        run: yarn lint

      - name: "Run Frontend tests"
        run: yarn test
        
      - name: "Build frontend"
        run: yarn build

  backend-validation:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/vaa-strapi

    steps:
      - name: "Checkout Backend source code"
        uses: actions/checkout@v3

      - name: Setup Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: "npm"
          cache-dependency-path: ./backend/vaa-strapi/package-lock.json

      - name: Cache node modules
        id: cache-npm-backend-main
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: "backend/vaa-strapi/node_modules"
          key: ${{ runner.os }}-backend-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: "Install Backend npm dependencies"
        run: |
          npm install

      - name: "Run Prettier check on Backend"
        run: |
          npm run prettier:check

      - name: "Run ESLint on backend"
        run: |
          npm run lint

#      - name: "Run Backend tests"
#        run: |
#         npm run test

      - name: "Build backend"
        run: |
          npm run build
