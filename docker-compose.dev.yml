services:
  frontend:
    extends:
      file: ./frontend/docker-compose.dev.yml
      service: frontend
    depends_on:
      strapi:
        condition: service_healthy
    # Volume mounts are handled in frontend/docker-compose.dev.yml
    environment:
      PUBLIC_BROWSER_BACKEND_URL: ${PUBLIC_BROWSER_BACKEND_URL}
      PUBLIC_SERVER_BACKEND_URL: ${PUBLIC_SERVER_BACKEND_URL}
      PUBLIC_BROWSER_FRONTEND_URL: ${PUBLIC_BROWSER_FRONTEND_URL}
      PUBLIC_SERVER_FRONTEND_URL: ${PUBLIC_SERVER_FRONTEND_URL}
      LOCAL_DATA_DIR: ${LOCAL_DATA_DIR}
      PUBLIC_IDENTITY_PROVIDER_AUTHORIZATION_ENDPOINT: ${PUBLIC_IDENTITY_PROVIDER_AUTHORIZATION_ENDPOINT}
      IDENTITY_PROVIDER_TOKEN_ENDPOINT: ${IDENTITY_PROVIDER_TOKEN_ENDPOINT}
      IDENTITY_PROVIDER_JWKS_URI: ${IDENTITY_PROVIDER_JWKS_URI}
      IDENTITY_PROVIDER_ISSUER: ${IDENTITY_PROVIDER_ISSUER}
      PUBLIC_IDENTITY_PROVIDER_CLIENT_ID: ${PUBLIC_IDENTITY_PROVIDER_CLIENT_ID}
      IDENTITY_PROVIDER_CLIENT_SECRET: ${IDENTITY_PROVIDER_CLIENT_SECRET}
      IDENTITY_PROVIDER_DECRYPTION_JWKS: ${IDENTITY_PROVIDER_DECRYPTION_JWKS}
      BACKEND_API_TOKEN: ${BACKEND_API_TOKEN}
      PUBLIC_DEBUG: ${PUBLIC_DEBUG}
      PUBLIC_CACHE_ENABLED: ${PUBLIC_CACHE_ENABLED}
      CACHE_DIR: ${CACHE_DIR}
      CACHE_TTL: ${CACHE_TTL}
      CACHE_LRU_SIZE: ${CACHE_LRU_SIZE}
      CACHE_EXPIRATION_INTERVAL: ${CACHE_EXPIRATION_INTERVAL}
  awslocal:
    extends:
      file: ./backend/vaa-strapi/docker-compose.dev.yml
      service: awslocal
    environment:
      DEBUG: 1
      AWS_SES_REGION: ${AWS_SES_REGION}
      MAIL_FROM: ${MAIL_FROM}
      AWS_SES_ACCESS_KEY_ID: ${AWS_SES_ACCESS_KEY_ID}
      AWS_SES_SECRET_ACCESS_KEY: ${AWS_SES_SECRET_ACCESS_KEY}
      AWS_S3_ACCESS_KEY_ID: ${AWS_S3_ACCESS_KEY_ID}
      AWS_S3_ACCESS_SECRET: ${AWS_S3_ACCESS_SECRET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
  strapi:
    extends:
      file: ./backend/vaa-strapi/docker-compose.dev.yml
      service: strapi
    depends_on:
      awslocal:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      STRAPI_HOST: ${STRAPI_HOST}
      STRAPI_PORT: ${STRAPI_PORT}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      DATABASE_SSL_SELF: ${DATABASE_SSL_SELF}
      GENERATE_MOCK_DATA_ON_INITIALISE: ${GENERATE_MOCK_DATA_ON_INITIALISE}
      GENERATE_MOCK_DATA_ON_RESTART: ${GENERATE_MOCK_DATA_ON_RESTART}
      LLM_OPENAI_API_KEY: ${LLM_OPENAI_API_KEY}
      LOAD_DATA_ON_INITIALISE_FOLDER: ${LOAD_DATA_ON_INITIALISE_FOLDER}
      AWS_SES_ACCESS_KEY_ID: ${AWS_SES_ACCESS_KEY_ID}
      AWS_SES_SECRET_ACCESS_KEY: ${AWS_SES_SECRET_ACCESS_KEY}
      AWS_SES_REGION: ${AWS_SES_REGION}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_REPLY_TO: ${MAIL_REPLY_TO}
      AWS_S3_ACCESS_KEY_ID: ${AWS_S3_ACCESS_KEY_ID}
      AWS_S3_ACCESS_SECRET: ${AWS_S3_ACCESS_SECRET}
      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      STATIC_CONTENT_BASE_URL: ${STATIC_CONTENT_BASE_URL}
      STATIC_MEDIA_CONTENT_PATH: ${STATIC_MEDIA_CONTENT_PATH}
      LOCALSTACK_ENDPOINT: http://awslocal:4566
      PUBLIC_BROWSER_FRONTEND_URL: ${PUBLIC_BROWSER_FRONTEND_URL}
  postgres:
    extends:
      file: ./backend/vaa-strapi/docker-compose.dev.yml
      service: postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

volumes:
  postgres:
  strapi-uploads:
  awslocal:
  cache:
    driver: local