services:
  frontend:
    extends:
      file: ./frontend/docker-compose.dev.yml
      service: frontend
    depends_on:
      - "strapi"
    environment:
      - VITE_BACKEND_URL=${VITE_BACKEND_URL}
      - PUBLIC_BACKEND_URL=${PUBLIC_BACKEND_URL}
  strapi:
    extends:
      file: ./backend/vaa-strapi/docker-compose.dev.yml
      service: strapi
    environment:
      STRAPI_HOST: ${STRAPI_HOST}
      STRAPI_PORT: ${STRAPI_PORT}
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_SCHEMA: ${DATABASE_SCHEMA}
      DATABASE_SSL_SELF: ${DATABASE_SSL_SELF}
      GENERATE_MOCK_DATA_ON_INITIALISE: ${GENERATE_MOCK_DATA_ON_INITIALISE}
      GENERATE_MOCK_DATA_ON_RESTART: ${GENERATE_MOCK_DATA_ON_RESTART}
      LOAD_DATA_ON_INITIALISE_FOLDER: ${LOAD_DATA_ON_INITIALISE_FOLDER}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      MAIL_FROM: ${MAIL_FROM}
      MAIL_REPLY_TO: ${MAIL_REPLY_TO}
  postgres:
    extends:
      file: ./backend/vaa-strapi/docker-compose.dev.yml
      service: postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
  maildev:
    image: maildev/maildev:2.1.0
    ports:
      - "${MAILDEV_PORT}:${MAILDEV_PORT}"
    environment:
      - MAILDEV_IP=0.0.0.0
      - MAILDEV_WEB_PORT=${MAILDEV_PORT}
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:${MAILDEV_PORT}/healthz || exit 1
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 15s

volumes:
  postgres:
  strapi-uploads:
